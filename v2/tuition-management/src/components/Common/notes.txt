IP Address: 188.40.133.160 Username: encodeco Password: %Dilum%1999Sadeepa
2083
1993





import React, {useRef} from "react";
import * as yup from "yup";
import axios, { formToJSON } from "axios";
import Apiurl from '../Apiurl';


function Notice() {
    const fileRef = useRef(null);


    const noticeSchema = yup.object().shape({
        notice_to: yup.string().required(),
        notice_title: yup.string().min(3).max(255).required(),
        notice_desc: yup.string().required(),
        files: yup.mixed()
            .test("is-file-too-big", "File exceeds 10MB", () => {
                let valid = true;
                const files = fileRef?.current?.files;
                if (files) {
                    const fileArr = Array.from(files);
                    fileArr.forEach((file) => {
                        const size = file.size / 1024 / 1024;
                        if (size > 10) {
                            valid = false;
                        }
                    });
                }
                return valid;
            })
            .test(
                "is-file-of-correct-type",
                "File is not of supported type",
                () => {
                    let valid = true;
                    const files = fileRef?.current?.files;
                    if (files) {
                        const fileArr = Array.from(files);
                        fileArr.forEach((file) => {
                            const type = file.type.split("/")[1];
                            const validTypes = [
                                "zip",
                                "xml",
                                "xhtml+xml",
                                "plain",
                                "svg+xml",
                                "rtf",
                                "pdf",
                                "jpeg",
                                "png",
                                "jpg",
                                "ogg",
                                "json",
                                "html",
                                "gif",
                                "csv"
                            ];
                            if (!validTypes.includes(type)) {
                                valid = false;
                            }
                        });
                    }
                    return valid;
                }
            ),
    });






    const createNotice = async (e) => {
        e.preventDefault();
        let formData = {
            notice_to: e.target.notice_to.value,
            notice_title: e.target.notice_title.value,
            notice_desc: e.target.notice_desc.value,
            files: e.target.files.value,
        };


        const isValid = await noticeSchema.isValid(formData);
        console.log(isValid);
        if (isValid) {
            const files = fileRef?.current?.files;
            if (files) {
                const fileArr = Array.from(files);
                fileArr.forEach((file) => {
                    formData.append("files", file);
                });
        }
        console.log(formData);
        }
    };

        // e.preventDefault();
        // const form = e.target;
        // const data = formToJSON(form.elements);
        // const formData = new FormData();
        // const files = fileRef?.current?.files;
        // if (files) {
        //     const fileArr = Array.from(files);
        //     fileArr.forEach((file) => {
        //         formData.append("files", file);
        //     });
        // }
        // formData.append("notice_to", data.notice_to);
        // formData.append("notice_title", data.notice_title);
        // formData.append("notice_desc", data.notice_desc);
        // axios
        //     .post(`${Apiurl}/api/notice/create`, formData, {
        //         headers: {
        //             "Content-Type": "multipart/form-data",
        //         },
        //     })
        //     .then((res) => {
        //         console.log(res);
        //     })
        //     .catch((err) => {
        //         console.log(err);
        //     });
    // };



  return (
    <div>
      <div className="row">
        <div className="col-sm-2"></div>

        <div className="col-sm-8 debox">
        <form onSubmit={createNotice}>
            <div className="mb-3 mt-3">
                <label htmlFor="audience" >Target Audience</label>
                <select className="form-control" id="audience" name="notice_to" >
                    <option value="" selected disabled hidden>Select Audience You Want To Cover</option>
                    <option value="5">All</option>
                    <option value="2">Staff</option>
                    <option value="3">Teacher</option>
                    <option value="4">Student</option>
                </select>
            </div>
            <div className="mb-3 mt-3">
                <label htmlFor="title" >Notice Title</label>
                <input type="text" className="form-control" id="title" name="notice_title" placeholder="Enter Title" />
            </div>
            <div className="mb-3 mt-3">
                <label htmlFor="noticeData" >Notice Description</label>
                {/* <input type="text" className="form-control" id="noticeData" name="notice_desc" placeholder="Enter Title" /> */}
                <textarea className="form-control" id="noticeData" name="notice_desc" placeholder="Enter Title" rows="3"></textarea>
            </div>

            <div className="mb-3 mt-3">
                <label htmlFor="files" >Attachments</label>
                <input type="file" name="attachFiles" id="files" multiple />
                <div className="form-files">
                <small>File Supported : zip",
                "xml",
                "xhtml+xml",
                "plain",
                "svg+xml",
                "rtf",
                "pdf",
                "jpeg",
                "png",
                "jpg",
                "ogg",
                "json",
                "html",
                "gif",
                "csv"</small>
                </div>

                <div className="form-files">
                <small>Max File Size : 10MB</small>
                </div>
            </div>

            <div className="mb-3 mt-3">
                <input type="submit" className="btn btn-primary"/>
            </div>
        </form>
         
        </div>
      </div>
    </div>
  );
}

export default Notice
