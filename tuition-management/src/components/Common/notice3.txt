import React, {useRef, useEffect, useState} from "react";
import * as yup from "yup";
import axios, { formToJSON } from "axios";
import Apiurl from '../Apiurl';


function Notice() {
    const fileRef = useRef(null);
    const [audience, setAudience] = useState("");
    const [noticeTitle, setNoticeTitle] = useState("");
    const [noticeDescription, setNoticeDescription] = useState("");
    const [attachFiles, setAttachFiles] = useState([]);


    const noticeSchema = yup.object().shape({
        notice_to: yup.string().required(),
        notice_title: yup.string().min(3).max(255).required(),
        notice_desc: yup.string().required(),
    });






    const createNotice = async (e) => {
        e.preventDefault();
        let formData = {
            setAudience: e.target.notice_to.value,
            setNoticeTitle: e.target.notice_title.value,
            setNoticeDescription: e.target.notice_desc.value,
            setAttachFiles: e.target.files.value,
        };


        const isValid = await noticeSchema.isValid(formData);
        console.log(isValid);
        if (isValid) {

            axios.post(`${Apiurl}/multiple`, {
                notice_to: audience,
                notice_title: noticeTitle,
                notice_desc: noticeDescription,
                files: attachFiles,
            }, {
                headers: {
                    "Content-Type": "multipart/form-data",
                },
            })
            .then((res) => {
                console.log(res);
            })
            .catch((err) => {
                console.log(err);
            });
            console.log(formData);
        }
    };

    //----------------------------------


        //     const files = fileRef?.current?.files;
        //     if (files) {
        //         const fileArr = Array.from(files);
        //         fileArr.forEach((file) => {
        //             formData.append("files", file);
        //         });
        // }


    //     e.preventDefault();
    //     const form = e.target;
    //     const data = formToJSON(form.elements);
    //     const formData = new FormData();
    //     const files = fileRef?.current?.files;
    //     if (files) {
    //         const fileArr = Array.from(files);
    //         fileArr.forEach((file) => {
    //             formData.append("files", file);
    //         });
    //     }
    //     formData.append("notice_to", data.notice_to);
    //     formData.append("notice_title", data.notice_title);
    //     formData.append("notice_desc", data.notice_desc);
    //     axios
    //         .post(`${Apiurl}/multiple`, formData, {
    //             headers: {
    //                 "Content-Type": "multipart/form-data",
    //             },
    //         })
    //         .then((res) => {
    //             console.log(res);
    //         })
    //         .catch((err) => {
    //             console.log(err);
    //         });
    // };





  return (
    <div>
      <div className="row">
        <div className="col-sm-2"></div>

        <div className="col-sm-8 debox">
        <form onSubmit={createNotice} method="post" encType="multipart/form-data">
            <div className="mb-3 mt-3">
                <label htmlFor="audience" >Target Audience</label>
                <select className="form-control" id="audience" name="notice_to" value={audience} onChange={(event) => {setAudience(event.target.value)}} >
                    <option value="" selected disabled hidden>Select Audience You Want To Cover</option>
                    <option value="5">All</option>
                    <option value="2">Staff</option>
                    <option value="3">Teacher</option>
                    <option value="4">Student</option>
                </select>
            </div>
            <div className="mb-3 mt-3">
                <label htmlFor="title" >Notice Title</label>
                <input type="text" className="form-control" id="title" name="notice_title" placeholder="Enter Title" value={noticeTitle} onChange={(event) => {setNoticeTitle(event.target.value)}} />
            </div>
            <div className="mb-3 mt-3">
                <label htmlFor="noticeData" >Notice Description</label>
                {/* <input type="text" className="form-control" id="noticeData" name="notice_desc" placeholder="Enter Title" /> */}
                <textarea className="form-control" id="noticeData" name="notice_desc" placeholder="Enter Title" rows="3" onChange={(event) => {setNoticeDescription(event.target.value)}}></textarea>
            </div>

            <div className="mb-3 mt-3">
                <label htmlFor="files" >Attachments</label>
                <input type="file" name="attachFiles" id="files" multiple onChange={(event) => {setAttachFiles(event.target.value)}} />
                <div className="form-files">
                <small>File Supported : zip",
                "xml",
                "xhtml+xml",
                "plain",
                "svg+xml",
                "rtf",
                "pdf",
                "jpeg",
                "png",
                "jpg",
                "ogg",
                "json",
                "html",
                "gif",
                "csv"</small>
                </div>

                <div className="form-files">
                <small>Max File Size : 10MB</small>
                </div>
            </div>

            <div className="mb-3 mt-3">
                <input type="submit" className="btn btn-primary"/>
            </div>
        </form>
         
        </div>
      </div>
    </div>
  );
}

export default Notice

